name: Deploy Jenkins to EKS

on:
  push:
    branches: [ main ]
    paths: 
      - 'k8s/**'
      - '.github/workflows/deploy-jenkins.yml'
  workflow_dispatch:
    inputs:
      environment:
        description: 'Deployment Environment'
        required: true
        default: 'dev'
        type: choice
        options:
        - dev
        - staging

env:
  CLUSTER_NAME: ${{ secrets.EKS_CLUSTER_NAME }}
  AWS_REGION: ${{ secrets.AWS_REGION }}
  NAMESPACE: jenkins

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment || 'dev' }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Setup EKS access
      run: |
        aws eks update-kubeconfig --region ${{ env.AWS_REGION }} --name ${{ env.CLUSTER_NAME }}

    - name: Cleanup previous deployment
      run: |
        kubectl delete deployment jenkins-master jenkins-agent -n $NAMESPACE --ignore-not-found=true
        kubectl delete pvc jenkins-master-pvc jenkins-agent-pvc -n $NAMESPACE --ignore-not-found=true

    - name: Deploy Jenkins resources
      run: |
        kubectl apply -f k8s/namespaces/
        kubectl apply -f k8s/jenkins-master/jenkins-disable-csrf.yaml
        kubectl apply -f k8s/storage/
        kubectl apply -f k8s/jenkins-master/rbac/
        kubectl apply -f k8s/jenkins-master/jenkins-service-account.yaml
        kubectl apply -f k8s/jenkins-master/jenkins-master-deployment.yaml
        kubectl apply -f k8s/jenkins-master/jenkins-master-service.yaml

    - name: Wait for Jenkins Master
      run: |
        kubectl wait --for=condition=ready pod -l app=jenkins-master -n $NAMESPACE --timeout=600s

    - name: Deploy remaining resources
      run: |
        kubectl apply -f k8s/jenkins-agent/jenkins-agent-deployment.yaml
        kubectl apply -f k8s/networking/

    - name: Get deployment info
      run: |
        ALB_URL=$(kubectl get ingress jenkins-alb -n $NAMESPACE -o jsonpath='{.status.loadBalancer.ingress[0].hostname}' 2>/dev/null || echo "Pending")
        JENKINS_POD=$(kubectl get pods -n $NAMESPACE -l app=jenkins-master -o jsonpath='{.items[0].metadata.name}' 2>/dev/null || echo "")
        
        echo "ALB_URL=$ALB_URL" >> $GITHUB_ENV
        echo "JENKINS_POD=$JENKINS_POD" >> $GITHUB_ENV
        
        echo "Jenkins URL: http://$ALB_URL/jenkins"
        if [ -n "$JENKINS_POD" ]; then
          echo "Initial password:"
          kubectl exec -n $NAMESPACE $JENKINS_POD -- cat /var/jenkins_home/secrets/initialAdminPassword 2>/dev/null || echo "Check pod logs"
        fi

    - name: Create summary
      run: |
        echo "## Jenkins Deployment Complete" >> $GITHUB_STEP_SUMMARY
        echo "- **URL**: http://${{ env.ALB_URL }}/jenkins" >> $GITHUB_STEP_SUMMARY
        echo "- **Status**: âœ… Success" >> $GITHUB_STEP_SUMMARY
        echo "- **Note**: ALB may take 2-5 minutes to be ready" >> $GITHUB_STEP_SUMMARY