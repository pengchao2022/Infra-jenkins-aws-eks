apiVersion: apps/v1
kind: Deployment
metadata:
  name: jenkins-agent
  namespace: jenkins
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jenkins-agent
  template:
    metadata:
      labels:
        app: jenkins-agent
    spec:
      serviceAccountName: jenkins
      containers:
      - name: jnlp
        image: jenkins/inbound-agent:latest
        securityContext:
          runAsUser: 0  # root 用户
        command:
        - /bin/sh
        - -c
        - |
          echo "=== 安装 Docker 客户端 ==="
          apt-get update && apt-get install -y \
            curl \
            wget \
            unzip \
            git \
            python3 \
            python3-pip
          
          echo "=== 安装 Docker CLI ==="
          # 安装 Docker CLI（不安装 daemon）
          curl -fsSL https://download.docker.com/linux/static/stable/x86_64/docker-20.10.9.tgz | \
            tar -xzC /usr/local/bin --strip-components=1
          
          echo "=== 安装 AWS CLI ==="
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip -q awscliv2.zip
          ./aws/install --bin-dir /usr/local/bin --install-dir /usr/local/aws-cli --update
          rm -rf awscliv2.zip aws/
          
          echo "=== 安装 Python 包 ==="
          pip3 install boto3 botocore requests
          
          echo "=== 等待 Docker Daemon 启动 ==="
          # 等待 DinD 容器完全启动
          for i in {1..30}; do
            if docker version >/dev/null 2>&1; then
              echo "Docker daemon 已就绪"
              break
            fi
            echo "等待 Docker daemon... ($i/30)"
            sleep 5
          done
          
          echo "=== 验证安装 ==="
          docker --version || echo "Docker 客户端安装失败"
          python3 --version || echo "Python 安装失败"
          aws --version || echo "AWS CLI 安装失败"
          
          echo "=== 启动 Jenkins Agent ==="
          exec java -jar /usr/share/jenkins/agent.jar \
            -url http://jenkins-master.jenkins:8080 \
            -workDir /home/jenkins/agent
        env:
        - name: DOCKER_HOST
          value: "unix:///var/run/docker.sock"
        resources:
          requests:
            memory: "256Mi"  # 减少到 256Mi
            cpu: "200m"      # 减少 CPU 请求
          limits:
            memory: "512Mi"  # 减少到 512Mi
            cpu: "400m"      # 减少 CPU 限制

        volumeMounts:
        - name: workspace
          mountPath: /home/jenkins/agent
        - name: docker-sock
          mountPath: /var/run/docker.sock

      # DinD 容器
      - name: dind
        image: docker:dind
        securityContext:
          privileged: true  # DinD 需要特权模式
        args:
        - --storage-driver=overlay2
        - --host=unix:///var/run/docker.sock
        env:
        - name: DOCKER_TLS_CERTDIR
          value: ""  # 禁用 TLS，简化配置
        resources:
          requests:
            memory: "256Mi"  # 减少到 256Mi
            cpu: "200m"      # 减少 CPU 请求
          limits:
            memory: "512Mi"  # 减少到 512Mi
            cpu: "400m"      # 减少 CPU 限制
        volumeMounts:
        - name: docker-sock
          mountPath: /var/run
        - name: docker-lib
          mountPath: /var/lib/docker
        livenessProbe:
          exec:
            command:
            - docker
            - info
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          exec:
            command:
            - docker
            - info
          initialDelaySeconds: 30
          periodSeconds: 10

      volumes:
      - name: workspace
        emptyDir: {}
      - name: docker-sock
        emptyDir: {}
      - name: docker-lib
        emptyDir: {}